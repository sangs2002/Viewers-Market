from datetime import datetime
from mysql.connector import IntegrityError  # Assuming you are using MySQL

from sql_connection import get_sql_connection

def insert_order(connection, order):
    try:
        cursor = connection.cursor()

        order_query = "INSERT INTO orders (customer_name, total, datetime) VALUES (%s, %s, %s)"
        order_data = (order['customer_name'], order['Grand_Total'], datetime.now())
        cursor.execute(order_query, order_data)

        order_id = cursor.lastrowid
        order_details_query = "INSERT INTO order_details (order_id, product_id, quantity, total_price) VALUES (%s, %s, %s, %s)"
        order_details_data = []

        for order_details_record in order['order_details']:
            order_details_data.append([
                order_id,
                int(order_details_record['product_id']),
                float(order_details_record['quantity']),
                float(order_details_record['total_price'])
            ])
        cursor.executemany(order_details_query, order_details_data)
        connection.commit()
        return order_id
    except IntegrityError as e:
        connection.rollback()
        if "Duplicate entry" in str(e):
            print("Error: Duplicate entry. You may want to handle this case.")
        else:
            print(f"Error: {e}")
        return None
    finally:
        cursor.close()

if __name__ == '__main__':
    connection = get_sql_connection()
    if connection:
        order_id = insert_order(connection, {
            'customer_name': 'arun',
            'Grand_Total': 700,
            'datetime': datetime.now(),
            'order_details': [
                {
                    'product_id': 1,
                    'quantity': 2,
                    'total_price': 50
                },
                {
                    'product_id': 3,
                    'quantity': 1,
                    'total_price': 100
                },
            ]
        })

        if order_id is not None:
            print(f"Order inserted successfully with ID: {order_id}")
